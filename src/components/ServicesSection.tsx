"use client";

import { useEffect, useState } from "react";

export default function ServicesSection() {
  const [visibleServices, setVisibleServices] = useState<number[]>([]);

  const services = [
    {
      icon: "üíª",
      title: "‡¶Ö‡¶®‡¶≤‡¶æ‡¶á‡¶®/‡¶Ö‡¶´‡¶≤‡¶æ‡¶á‡¶® ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ",
      description: "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶Ø‡¶º‡ßÄ ‡¶¨‡ßá‡¶õ‡ßá ‡¶®‡¶ø‡¶®",
      color: "bg-blue-100 group-hover:bg-blue-500",
      features: ["‡¶≤‡¶æ‡¶á‡¶≠ ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏", "‡¶∞‡ßá‡¶ï‡¶∞‡ßç‡¶°‡ßá‡¶° ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì", "‡¶á‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶≠ ‡¶∏‡ßá‡¶∂‡¶®"],
    },
    {
      icon: "üë®‚Äçüè´",
      title: "‡¶Æ‡ßá‡¶ß‡¶æ‡¶¨‡ßÄ ‡¶ì ‡¶Ö‡¶≠‡¶ø‡¶ú‡ßç‡¶û ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï",
      description: "‡¶¶‡ßá‡¶∂‡ßá‡¶∞ ‡¶∏‡ßá‡¶∞‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶¶‡ßá‡¶∞ ‡¶ó‡¶æ‡¶á‡¶°‡ßá‡¶®‡ßç‡¶∏",
      color: "bg-green-100 group-hover:bg-green-500",
      features: [
        "‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶ï‡¶Æ‡¶£‡ßç‡¶°‡¶≤‡ßÄ",
        "‡¶™‡¶æ‡¶∞‡ßç‡¶∏‡ßã‡¶®‡¶æ‡¶≤‡¶æ‡¶á‡¶ú‡¶° ‡¶ó‡¶æ‡¶á‡¶°‡ßá‡¶®‡ßç‡¶∏",
        "‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡¶∞‡¶ø‡¶Ç ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü",
      ],
    },
    {
      icon: "üìö",
      title: "‡¶Æ‡¶æ‡¶®‡¶∏‡¶Æ‡ßç‡¶Æ‡¶§ ‡¶∏‡ßç‡¶ü‡¶æ‡¶°‡¶ø ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡ßá‡¶∞‡¶ø‡¶Ø‡¶º‡¶æ‡¶≤‡¶∏",
      description: "‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶™‡¶æ‡¶†‡ßç‡¶Ø ‡¶â‡¶™‡¶ï‡¶∞‡¶£",
      color: "bg-purple-100 group-hover:bg-purple-500",
      features: ["‡¶Ü‡¶™‡¶°‡ßá‡¶ü‡ßá‡¶° ‡¶ï‡¶®‡ßç‡¶ü‡ßá‡¶®‡ßç‡¶ü", "‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü‡ßá‡¶° ‡¶¨‡ßÅ‡¶ï", "‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶∞‡¶ø‡¶∏‡ßã‡¶∞‡ßç‡¶∏"],
    },
    {
      icon: "üéØ",
      title: "‡¶ï‡¶®‡¶∏‡ßá‡¶™‡ßç‡¶ü ‡¶¨‡ßá‡¶á‡¶ú‡¶° ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏",
      description: "‡¶ó‡¶≠‡ßÄ‡¶∞ ‡¶ß‡¶æ‡¶∞‡¶£‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ",
      color: "bg-yellow-100 group-hover:bg-yellow-500",
      features: [
        "‡¶ß‡¶æ‡¶™‡ßá ‡¶ß‡¶æ‡¶™‡ßá ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ",
        "‡¶™‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶ü‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£",
        "‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤ ‡¶≤‡¶æ‡¶á‡¶´ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßç‡¶≤‡¶ø‡¶ï‡ßá‡¶∂‡¶®",
      ],
    },
    {
      icon: "üìä",
      title: "‡¶á‡¶â‡¶®‡¶ø‡¶ï ‡¶è‡¶ï‡ßç‡¶∏‡¶æ‡¶Æ ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ",
      description: "‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø",
      color: "bg-red-100 group-hover:bg-red-500",
      features: ["AI ‡¶¨‡ßá‡¶∏‡¶° ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡¶ø‡¶Ç", "‡¶°‡¶ø‡¶ü‡ßá‡¶á‡¶≤‡¶° ‡¶è‡¶®‡¶æ‡¶≤‡¶æ‡¶á‡¶∏‡¶ø‡¶∏", "‡¶∞‚Äå‡ßç‡¶Ø‡¶æ‡¶ô‡ßç‡¶ï‡¶ø‡¶Ç ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ"],
    },
    {
      icon: "üí¨",
      title: "‡¶∏‡¶æ‡¶∞‡ßç‡¶¨‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï Q&A ‡¶∏‡ßá‡¶¨‡¶æ",
      description: "‡ß®‡ß™/‡ß≠ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶∏‡¶Æ‡¶æ‡¶ß‡¶æ‡¶®",
      color: "bg-indigo-100 group-hover:bg-indigo-500",
      features: ["‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï ‡¶∞‡ßá‡¶∏‡¶™‡¶®‡ßç‡¶∏", "‡¶è‡¶ï‡ßç‡¶∏‡¶™‡¶æ‡¶∞‡ßç‡¶ü ‡¶∏‡¶æ‡¶™‡ßã‡¶∞‡ßç‡¶ü", "‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶°‡¶ø‡¶∏‡¶ï‡¶æ‡¶∂‡¶®"],
    },
    {
      icon: "üì±",
      title: "Auto SMS ‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü",
      description: "‡¶§‡¶æ‡ßé‡¶ï‡ßç‡¶∑‡¶£‡¶ø‡¶ï ‡¶´‡¶≤‡¶æ‡¶´‡¶≤ ‡¶™‡ßç‡¶∞‡¶æ‡¶™‡ßç‡¶§‡¶ø",
      color: "bg-teal-100 group-hover:bg-teal-500",
      features: [
        "‡¶∞‡¶ø‡¶Ø‡¶º‡ßá‡¶≤ ‡¶ü‡¶æ‡¶á‡¶Æ ‡¶®‡ßã‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®",
        "‡¶™‡¶æ‡¶∞‡ßç‡¶´‡¶∞‡¶Æ‡ßá‡¶®‡ßç‡¶∏ ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶ø‡¶Ç",
        "‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶®‡ßç‡¶ü ‡¶Ü‡¶™‡¶°‡ßá‡¶ü",
      ],
    },
    {
      icon: "üìà",
      title: "‡¶è‡¶ï‡ßç‡¶∏‡¶æ‡¶Æ ‡¶è‡¶®‡¶æ‡¶≤‡¶æ‡¶á‡¶∏‡¶ø‡¶∏ ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü",
      description: "‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶™‡¶æ‡¶∞‡¶´‡¶∞‡¶Æ‡ßá‡¶®‡ßç‡¶∏ ‡¶¨‡¶ø‡¶∂‡ßç‡¶≤‡ßá‡¶∑‡¶£",
      color: "bg-orange-100 group-hover:bg-orange-500",
      features: [
        "‡¶∏‡¶æ‡¶¨‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶ì‡¶Ø‡¶º‡¶æ‡¶á‡¶ú ‡¶∏‡ßç‡¶ï‡ßã‡¶∞",
        "‡¶â‡¶á‡¶ï ‡¶®‡ßá‡¶∏ ‡¶Ü‡¶á‡¶°‡ßá‡¶®‡ßç‡¶ü‡¶ø‡¶´‡¶ø‡¶ï‡ßá‡¶∂‡¶®",
        "‡¶á‡¶Æ‡¶™‡ßç‡¶∞‡ßÅ‡¶≠‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶™‡ßç‡¶≤‡ßç‡¶Ø‡¶æ‡¶®",
      ],
    },
  ];

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const index = parseInt(
              entry.target.getAttribute("data-index") || "0"
            );
            setTimeout(() => {
              setVisibleServices((prev) => [...prev, index]);
            }, index * 100);
          }
        });
      },
      { threshold: 0.1 }
    );

    const elements = document.querySelectorAll(".service-card");
    elements.forEach((el) => observer.observe(el));

    return () => {
      elements.forEach((el) => observer.unobserve(el));
    };
  }, []);

  return (
    <section className="py-16 bg-white relative overflow-hidden">
      {/* Background Pattern */}
      <div className="absolute inset-0 opacity-5">
        <div
          className="w-full h-full"
          style={{
            backgroundImage: `url("data:image/svg+xml,%3Csvg width='40' height='40' viewBox='0 0 40 40' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23000' fill-opacity='0.05'%3E%3Cpath d='m20 20 20-20H20v20z'/%3E%3C/g%3E%3C/svg%3E")`,
          }}
        ></div>
      </div>

      <div className="container mx-auto px-4 relative z-10">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold text-gray-800 mb-4">
            ‡¶Ö‡¶®‡¶®‡ßç‡¶Ø ‡¶∏‡¶¨ <span className="gradient-text">‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡¶∞‡¶ø‡¶ï‡ßç‡¶∞‡¶Æ‡¶æ</span>
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            ‡¶¶‡ßá‡¶∂‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶∏‡¶Æ‡¶æ‡¶® ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶∏‡ßá‡¶¨‡¶æ ‡¶™‡ßç‡¶∞‡¶¶‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶∂‡ßç‡¶∞‡ßÅ‡¶§‡¶ø‡¶¨‡¶¶‡ßç‡¶ß
          </p>
          <div className="mt-6 w-24 h-1 bg-gradient-to-r from-blue-500 to-purple-500 mx-auto rounded-full"></div>
        </div>

        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          {services.map((service, index) => (
            <div
              key={index}
              data-index={index}
              className={`service-card text-center group cursor-pointer transform transition-all duration-500 hover:scale-105 ${
                visibleServices.includes(index)
                  ? "opacity-100 translate-y-0"
                  : "opacity-0 translate-y-8"
              }`}
            >
              <div className="bg-white rounded-3xl p-6 shadow-lg hover:shadow-2xl transition-all duration-300 border border-gray-100 group-hover:border-transparent">
                <div
                  className={`w-20 h-20 ${service.color} rounded-2xl flex items-center justify-center mx-auto mb-4 transition-all duration-300 relative overflow-hidden`}
                >
                  <span className="text-2xl group-hover:scale-110 transition-transform duration-300 relative z-10 group-hover:text-white">
                    {service.icon}
                  </span>
                  {/* Hover effect overlay */}
                  <div className="absolute inset-0 bg-gradient-to-br from-transparent to-black/10 opacity-0 group-hover:opacity-100 transition-opacity"></div>
                </div>

                <h3 className="text-lg font-semibold text-gray-800 mb-2 group-hover:text-gray-700 transition-colors">
                  {service.title}
                </h3>
                <p className="text-gray-600 text-sm mb-4 group-hover:text-gray-700 transition-colors">
                  {service.description}
                </p>

                {/* Features list */}
                <div className="opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
                  <ul className="text-xs text-gray-500 space-y-1">
                    {service.features.map((feature, featureIndex) => (
                      <li
                        key={featureIndex}
                        className="flex items-center justify-center"
                      >
                        <span className="w-1 h-1 bg-blue-400 rounded-full mr-2"></span>
                        {feature}
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* Quality Assurance Badge */}
        <div className="mt-16 text-center">
          <div className="inline-flex items-center bg-gradient-to-r from-blue-500 to-purple-600 text-white px-8 py-4 rounded-full shadow-lg hover:shadow-xl transition-all transform hover:scale-105">
            <span className="text-2xl mr-3">üèÜ</span>
            <div className="text-left">
              <div className="font-semibold">
                ‡¶¶‡ßá‡¶∂‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶∏‡¶Æ‡¶æ‡¶® ‡¶∏‡ßá‡¶¨‡¶æ‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶Ø‡¶º‡¶§‡¶æ
              </div>
              <div className="text-xs opacity-90">
                ‡¶∏‡¶ï‡¶≤ ‡¶∂‡¶æ‡¶ñ‡¶æ‡¶Ø‡¶º ‡¶è‡¶ï‡¶á ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
